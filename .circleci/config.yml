version: 2.1

orbs:
  aws-cli: circleci/aws-cli@1.0.0
  aws_assume_role: lbh-hackit/aws_assume_role@0.1.0

executors:
  node-executor:
    docker:
      - image: cimg/node:14.18.0
  docker-python:
    docker:
      - image: circleci/python:3.7

references:
  workspace_root: &workspace_root "~"
  attach_workspace: &attach_workspace
    attach_workspace:
      at: *workspace_root

jobs:
  checkout:
    executor: node-executor
    steps:
      - *attach_workspace
      - checkout
      - persist_to_workspace:
          root: *workspace_root
          paths: .

  install-dependencies-apps-script:
    executor: node-executor
    working_directory: ~/project/google-scripts
    steps:
      - *attach_workspace
      - restore_cache:
          key: dependency-cache-{{ checksum "yarn.lock" }}
      - run:
          name: Install Dependencies
          command: yarn --frozen-lockfile
      - save_cache:
          key: dependency-cache-{{ checksum "yarn.lock" }}
          paths:
            - ./node_modules
      - persist_to_workspace:
          root: *workspace_root
          paths: .

  unit-tests-apps-script:
    executor: node-executor
    working_directory: ~/project/google-scripts
    steps:
      - *attach_workspace
      - run:
          name: Run typecheck
          command: yarn tsc --noEmit
      - run:
          name: Run lint
          command: yarn lint
      - run:
          name: Run tests
          command: yarn test
    environment:
      TZ: "Europe/London"

  clasp-push:
    executor: node-executor
    working_directory: ~/project/google-scripts
    steps:
      - *attach_workspace
      - run:
          name: create clasprc.json file in root
          command: |
            echo "{\"token\":{\"scope\":\"https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/userinfo.email https://www.googleapis.com/auth/script.deployments https://www.googleapis.com/auth/drive.file https://www.googleapis.com/auth/service.management https://www.googleapis.com/auth/logging.read https://www.googleapis.com/auth/userinfo.profile openid https://www.googleapis.com/auth/script.webapp.deploy https://www.googleapis.com/auth/script.projects https://www.googleapis.com/auth/drive.metadata.readonly\",\"token_type\":\"bearer\",\"refresh_token\":\"$CLASP_REFRESH_TOKEN\",\"access_token\":\"\"}}" > ~/.clasprc.json
      - run:
          name: create appsscript.json file
          command: |
            echo "{\"timeZone\": \"Europe\/London\",\"dependencies\": {},\"exceptionLogging\": \"STACKDRIVER\",\"runtimeVersion\": \"V8\"}" > ~/project/google-scripts/process-form-submission/appsscript.json
      - run:
          name: Clasp push
          command: ./node_modules/@google/clasp/build/src/index.js push --force

  assume-role-mosaic-production:
    executor: docker-python
    steps:
      - checkout
      - aws_assume_role/assume_role:
          account: $AWS_ACCOUNT_PRODUCTION
          profile_name: default
          role: "circleci-assume-role"
      - persist_to_workspace:
          root: *workspace_root
          paths:
            - .aws

  install-dependencies-lambda:
    executor: node-executor
    working_directory: ~/project/referral-form-data-process
    steps:
      - *attach_workspace
      - restore_cache:
          key: dependency-cache-{{ checksum "yarn.lock" }}
      - run:
          name: Install Dependencies
          command: yarn --frozen-lockfile
      - save_cache:
          key: dependency-cache-{{ checksum "yarn.lock" }}
          paths:
            - ./node_modules
      - persist_to_workspace:
          root: *workspace_root
          paths: .

  unit-tests-lambda:
    executor: node-executor
    working_directory: ~/project/referral-form-data-process
    steps:
      - *attach_workspace
      - run:
          name: Run typecheck
          command: yarn tsc --noEmit
      - run:
          name: Run lint
          command: yarn lint
      - run:
          name: Run tests
          command: yarn test
    environment:
      TZ: "Europe/London"

  deploy-lambda:
    executor: aws-cli/default
    working_directory: ~/project/referral-form-data-process
    steps:
      - *attach_workspace
      - run:
          name: "deploy"
          command: "sudo npm i -g serverless && sls deploy -s mosaic-prod --CLIENTEMAIL $CLIENT_EMAIL --PRIVATEKEY $PRIVATE_KEY"

workflows:
  version: 2
  process-form-submission:
    jobs:
      - checkout
      - install-dependencies-apps-script:
          requires:
            - checkout
      - unit-tests-apps-script:
          requires:
            - install-dependencies-apps-script
      - clasp-push:
          requires:
            - unit-tests-apps-script
          filters:
            branches:
              only: main
      - install-dependencies-lambda:
          requires:
            - checkout
      - unit-tests-lambda:
          requires:
            - install-dependencies-lambda
      - permit-deploy-production:
          type: approval
          requires:
            - unit-tests-lambda
          filters:
            branches:
              only: main
      - assume-role-mosaic-production:
          context: api-assume-role-social-care-production-context
          requires:
            - permit-deploy-production
          filters:
            branches:
              only: main
      - deploy-lambda:
          requires:
            - assume-role-mosaic-production
          filters:
            branches:
              only: main
